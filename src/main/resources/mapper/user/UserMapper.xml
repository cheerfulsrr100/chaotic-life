<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.greekn.user.UserDao">
  <resultMap id="BaseResultMap" type="cc.greekn.user.User">
    <id column="chaotic_life_user_user_id" jdbcType="INTEGER" property="userId" />
    <result column="chaotic_life_user_user_name" jdbcType="VARCHAR" property="userName" />
    <result column="chaotic_life_user_user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="chaotic_life_user_user_phone_number" jdbcType="VARCHAR" property="userPhoneNumber" />
    <result column="chaotic_life_user_user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="chaotic_life_user_user_create_time" jdbcType="TIMESTAMP" property="userCreateTime" />
    <result column="chaotic_life_user_user_last_login_time" jdbcType="TIMESTAMP" property="userLastLoginTime" />
  </resultMap>
  <sql id="Base_Column_List">
    chaotic_life_user.user_id as chaotic_life_user_user_id, chaotic_life_user.user_name as chaotic_life_user_user_name, 
    chaotic_life_user.user_password as chaotic_life_user_user_password, chaotic_life_user.user_phone_number as chaotic_life_user_user_phone_number, 
    chaotic_life_user.user_email as chaotic_life_user_user_email, chaotic_life_user.user_create_time as chaotic_life_user_user_create_time, 
    chaotic_life_user.user_last_login_time as chaotic_life_user_user_last_login_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chaotic_life_user chaotic_life_user
    where chaotic_life_user.user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chaotic_life_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="cc.greekn.user.User" useGeneratedKeys="true">
    insert into chaotic_life_user (user_name, user_password, user_phone_number, 
      user_email, user_create_time, user_last_login_time
      )
    values (#{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{userPhoneNumber,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR}, now(), #{userLastLoginTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="cc.greekn.user.User" useGeneratedKeys="true">
    insert into chaotic_life_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userCreateTime != null">
        user_create_time,
      </if>
      <if test="userLastLoginTime != null">
        user_last_login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneNumber != null">
        #{userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userCreateTime != null">
        #{userCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLastLoginTime != null">
        #{userLastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cc.greekn.user.User">
    update chaotic_life_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number = #{userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userCreateTime != null">
        user_create_time = #{userCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userLastLoginTime != null">
        user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.greekn.user.User">
    update chaotic_life_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_phone_number = #{userPhoneNumber,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_create_time = #{userCreateTime,jdbcType=TIMESTAMP},
      user_last_login_time = #{userLastLoginTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>